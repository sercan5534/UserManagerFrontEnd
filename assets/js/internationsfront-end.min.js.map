{"version":3,"sources":["../../app/app.module.js","../../app/app.routes.js","../../app/general/service/handlerService.js","../../app/group/controller/groupDetailController.js","../../app/group/controller/groupListController.js","../../app/main/controller/dashboardController.js","../../app/main/controller/errorController.js","../../app/user/controller/userDetailController.js","../../app/user/controller/userListController.js"],"names":["window","APP","angular","module","config","$routeProvider","when","templateUrl","controller","otherwise","factory","$http","$location","handleError","callback","response","path","urlBase","getUserList","get","then","data","getUserById","id","getUsersByGroupId","deleteUserById","addUser","post","getGroupList","getGroupById","deleteGroupById","addGroup","$scope","apiFactory","$uibModal","$routeParams","groupDetail","getGroupDetail","res","userList","groupList","closeAlert","index","alerts","splice","openDetail","openAddModal","modalInstance","open","animation","size","scope","opened","newUser","result","deleteGroup","push","msg","message","$uibModalInstance","cancel","dismiss","save","close","newGroup","openGroupDetail","openUserDetail","deleteUser","userDetail","getUserDetail"],"mappings":"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","file":"internationsfront-end.min.js","sourcesContent":["window.APP = angular.module('internationsapp',[ 'ngRoute', 'ui.bootstrap', 'ngSanitize' ]);\n","APP.config(['$routeProvider', function($routeProvider) {\n    $routeProvider\n        \n        // Dashboard\n        .when('/',{\n            templateUrl: '/app/main/view/dashboardView.html',\n            controller: 'dashboardController'\n        })\n        \n        // User List\n        .when('/user',{\n            templateUrl: '/app/user/view/userListView.html',\n            controller: 'userListController'\n        })\n        \n        // User Detail\n        .when('/user/:id',{\n            templateUrl: '/app/user/view/userDetailView.html',\n            controller: 'userDetailController'\n        })\n\n        // Group List\n        .when('/group',{\n            templateUrl: '/app/group/view/groupListView.html',\n            controller: 'groupListController'\n        })\n\n        // Group Detail\n        .when('/group/:id',{\n            templateUrl: '/app/group/view/groupDetailView.html',\n            controller: 'groupDetailController'\n        })\n\n        // Error\n        .when('/error', {\n            templateUrl: '/app/main/view/error.html',\n            controller: 'errorController'\n        })\n\n        // Otherwise\n        .otherwise({\n            templateUrl: '/app/main/view/error.html',\n            controller: 'errorController'\n        });  \n}]);","APP.factory('apiFactory', ['$http', '$location', function ($http, $location) {\n\n    var urlBase         = 'https://internations.herokuapp.com/api/';\n    var factory = {};\n\n\n    //TODO\n    //add user, assign user to group, remove user\n    //add group, delete group, assign users to group\n\n    factory.getUserList= function(callback){\n        return $http.get(urlBase+'user').then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n    factory.getUserById= function(id,callback){\n        return $http.get(urlBase+'user/'+id).then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n\n    factory.getUsersByGroupId= function(id,callback){\n        return $http.get(urlBase+'user/all/'+id).then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n    factory.deleteUserById= function(id,callback){\n        return $http.delete(urlBase+'user/'+id).then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n    factory.addUser = function(callback,data){\n        return $http.post(urlBase+'user',data).then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n    factory.getGroupList= function(callback){\n        return $http.get(urlBase+'group').then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n    factory.getGroupById= function(id,callback){\n        return $http.get(urlBase+'group/'+id).then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n    factory.deleteGroupById= function(id,callback){\n        return $http.delete(urlBase+'group/'+id).then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n    factory.addGroup = function(callback,data){\n        return $http.post(urlBase+'group',data).then(function (response) {\n            callback(response.data);\n        }, function (response) {\n            handleError(callback,response);\n        })\n    };\n\n    return factory;\n\n\n    function handleError(callback, response) {\n        //todo\n        $location.path(\"/error\");\n    }\n\n}]);\n","APP.controller('groupDetailController', ['$scope', 'apiFactory','$uibModal','$routeParams', function ($scope, apiFactory,$uibModal,$routeParams) {\n\n    $scope.groupDetail = {};\n\n    $scope.getGroupDetail = function (id) {\n        apiFactory.getGroupById(id,function (res) {\n            $scope.groupDetail = res.data;\n        });\n    };\n\n    $scope.getUsersByGroupId = function (id) {\n        apiFactory.getUsersByGroupId(id,function (res) {\n            $scope.userList = res.data;\n        });\n    };\n\n    $scope.getUsersByGroupId($routeParams.id);\n    $scope.getGroupDetail($routeParams.id);\n}]);\n","APP.controller('groupListController', ['$scope', 'apiFactory','$uibModal','$location', function ($scope, apiFactory,$uibModal,$location) {\n\n    $scope.groupList = [];\n\n    $scope.getGroupList = function () {\n        apiFactory.getGroupList(function (res) {\n            $scope.groupList = res.data;\n        });\n    };\n\n    $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n    };\n\n    $scope.openDetail = function (index) {\n        $location.path('/group/'+index);\n    };\n\n    $scope.openAddModal = function () {\n        var modalInstance = $uibModal.open({\n            animation: true,\n            templateUrl: 'addGroupModal.html',\n            controller: 'addGroupModalInsCtrl',\n            size: 'md',\n            scope: $scope\n        });\n        modalInstance.opened.then(function(){\n            $scope.newUser = {};\n        });\n        modalInstance.result.then(function (data) {\n            $scope.addGroup(data);\n        });\n    };\n\n    $scope.addGroup = function (data) {\n        apiFactory.addGroup(function (res) {\n            //Todo response check\n            $scope.getGroupList();\n        },data);\n    };\n\n    $scope.deleteGroup = function (id) {\n        apiFactory.deleteGroupById(id,function (res) {\n            //Todo response check\n            $scope.alerts.push({  msg: res.message });\n            $scope.getGroupList();\n        });\n    };\n\n    $scope.getGroupList();\n}]);\n\nAPP.controller('addGroupModalInsCtrl', function ($scope, $uibModalInstance) {\n    $scope.cancel = function () {\n        $uibModalInstance.dismiss('close');\n    };\n\n    $scope.save = function () {\n        $uibModalInstance.close($scope.newGroup);\n    };\n});","APP.controller('dashboardController', ['$scope', 'apiFactory','$location', function ($scope, apiFactory,$location) {\n    $scope.alerts = [];\n    $scope.getUserList = function () {\n        apiFactory.getUserList(function (res) {\n            $scope.userList = res.data;\n        })\n    };\n\n    $scope.getGroupList = function () {\n        apiFactory.getGroupList(function (res) {\n            $scope.groupList = res.data;\n        });\n    };\n\n    $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n    };\n\n    $scope.openGroupDetail = function (index) {\n        $location.path('/group/'+index);\n    };\n\n    $scope.openUserDetail = function (index) {\n        $location.path('/user/'+index);\n    };\n\n    $scope.deleteGroup = function (id) {\n        apiFactory.deleteGroupById(id,function (res) {\n            //Todo response check\n            $scope.alerts.push({  msg: res.message });\n            $scope.getGroupList();\n        });\n    };\n\n    $scope.deleteUser = function (id) {\n        apiFactory.deleteUserById(id,function (res) {\n            //Todo response check\n            $scope.alerts.push({  msg: res.message });\n            $scope.getUserList();\n        });\n    };\n    $scope.getGroupList();\n    $scope.getUserList();\n\n}]);","APP.controller('errorController',['$scope',function($scope){\n    \n}]);\n","APP.controller('userDetailController', ['$scope', 'apiFactory','$uibModal','$routeParams', function ($scope, apiFactory,$uibModal,$routeParams) {\n\n    $scope.userDetail = {};\n\n    $scope.getUserDetail = function (id) {\n        apiFactory.getUserById(id,function (res) {\n            $scope.userDetail = res.data;\n        });\n    };\n    $scope.getUserDetail($routeParams.id);\n}]);\n","APP.controller('userListController', ['$scope', 'apiFactory','$uibModal','$location', function ($scope, apiFactory,$uibModal,$location) {\n    $scope.alerts = [];\n    $scope.userList = [];\n    $scope.groupList = [];\n\n    $scope.getUserList = function () {\n        apiFactory.getUserList(function (res) {\n            $scope.userList = res.data;\n        });\n    };\n\n    $scope.getGroupList = function () {\n        apiFactory.getGroupList(function (res) {\n            $scope.groupList = res.data;\n        });\n    };\n\n    $scope.closeAlert = function (index) {\n        $scope.alerts.splice(index, 1);\n    };\n\n    $scope.openAddModal = function () {\n        var modalInstance = $uibModal.open({\n            animation: true,\n            templateUrl: 'addModal.html',\n            controller: 'addNModalInsCtrl',\n            size: 'md',\n            scope: $scope\n        });\n        modalInstance.opened.then(function(){\n            $scope.newUser = {};\n        });\n        modalInstance.result.then(function (data) {\n            $scope.addUser(data);\n        });\n    };\n\n    $scope.addUser = function (data) {\n        apiFactory.addUser(function (res) {\n            //Todo response check\n            $scope.getUserList();\n        },data);\n    };\n\n    $scope.deleteUser = function (id) {\n        apiFactory.deleteUserById(id,function (res) {\n            //Todo response check\n            $scope.alerts.push({  msg: res.message });\n            $scope.getUserList();\n        });\n    };\n\n    $scope.openDetail = function (index) {\n        $location.path('/user/'+index);\n    };\n\n    $scope.getUserList();\n    $scope.getGroupList();\n}]);\n\n\nAPP.controller('addNModalInsCtrl', function ($scope, $uibModalInstance) {\n    $scope.cancel = function () {\n        $uibModalInstance.dismiss('close');\n    };\n\n    $scope.save = function () {\n        //dummy\n        $scope.newUser.groupList = 1;\n        $uibModalInstance.close($scope.newUser);\n    };\n});"]}